"0","```r
# Print the k-means output
print(kmeans_model_2)
```"
"1","K-means clustering with 2 clusters of sizes 278, 535

Cluster means:
        PC1        PC2         PC3          PC4          PC5
1  3.836621 -0.1782331 -0.08329029  0.004725021  0.005774342
2 -1.993609  0.0926146  0.04327982 -0.002455244 -0.003000499
          PC6         PC7
1 -0.07115237  0.09171272
2  0.03697263 -0.04765633

Clustering vector:
  [1] 2 2 1 2 1 2 2 2 1 2 2 2 2 1 1 2 2 1 1 2 2 2 2 1 2 2 1 1 2
 [30] 2 2 2 1 2 2 2 1 2 1 2 2 2 2 2 2 2 2 2 1 2 1 2 1 2 1 2 1 2
 [59] 2 2 1 2 2 1 2 1 1 1 2 2 2 1 2 2 1 2 1 2 2 2 2 2 2 2 1 2 1
 [88] 2 2 1 2 2 1 2 2 2 2 1 1 1 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2
[117] 2 2 2 1 1 2 2 1 2 2 2 2 2 2 1 2 2 1 2 2 2 2 1 1 2 1 2 1 2
[146] 2 2 2 2 1 2 2 1 1 2 1 2 2 1 1 2 1 2 2 2 2 2 2 1 2 2 2 1 2
[175] 2 2 1 2 2 2 1 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 1 2 2 2 1 2 2
[204] 2 1 2 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2 2 2 2 1 2 2 2 2 1 2 2
[233] 2 2 1 2 2 1 2 2 2 1 2 2 1 1 2 2 2 2 1 2 2 2 2 2 2 1 2 2 1
[262] 2 2 2 1 2 1 2 2 1 2 2 2 2 1 2 2 2 2 1 2 1 2 2 2 1 2 2 2 2
[291] 2 1 1 1 1 1 2 2 1 2 2 2 1 2 1 1 1 2 1 2 2 1 2 2 2 2 1 1 2
[320] 1 1 2 1 2 2 2 2 2 1 1 1 2 2 2 1 2 2 2 1 2 2 1 2 1 1 1 2 2
[349] 2 1 2 2 2 2 2 2 2 2 2 1 1 2 2 1 2 2 1 2 2 1 2 1 2 2 2 1 2
[378] 1 2 2 2 2 1 2 1 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 1 2 2 2 2
[407] 1 2 1 2 1 1 2 2 1 2 2 2 1 1 1 2 2 1 1 2 1 1 1 2 2 2 2 2 1
[436] 2 2 2 1 2 2 1 2 2 1 2 2 1 1 2 2 1 1 1 2 1 1 2 1 2 1 1 2 2
[465] 2 2 1 2 2 1 1 2 2 1 1 2 1 2 1 1 1 2 2 1 1 2 2 1 2 2 1 2 2
[494] 2 1 2 2 2 2 2 1 2 1 1 2 2 1 1 1 2 2 2 1 2 1 1 2 2 2 2 2 2
[523] 2 2 1 2 2 2 2 1 1 1 2 2 1 1 2 1 2 2 1 1 2 2 2 1 2 2 2 1 1
[552] 1 1 2 2 2 2 1 1 1 2 1 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 1 2 2
[581] 1 2 2 2 2 1 2 2 2 2 2 2 2 2 1 1 2 2 2 1 2 2 1 2 2 1 2 1 2
[610] 2 2 2 1 1 1 2 1 2 2 2 2 2 1 2 1 2 2 2 1 2 2 2 1 2 1 2 2 2
[639] 2 1 1 2 2 1 2 1 2 2 1 2 1 2 2 2 2 2 1 2 2 2 1 2 1 2 2 1 2
[668] 1 2 2 2 2 2 1 1 2 2 1 1 2 2 2 1 1 1 1 2 1 2 2 1 1 2 1 2 1
[697] 2 2 1 2 2 1 1 1 2 1 2 2 1 1 1 2 1 2 2 1 2 2 2 2 2 1 2 2 2
[726] 2 2 2 1 2 2 2 1 2 1 1 2 2 2 1 2 2 1 1 2 2 2 1 1 1 2 1 2 1
[755] 1 2 2 1 2 1 2 2 2 1 1 2 2 1 2 2 2 2 1 1 2 2 1 2 2 1 2 2 2
[784] 2 2 1 1 1 2 1 2 1 1 2 1 1 2 2 2 2 1 2 2 2 2 2 2 2 2 2 1 2
[813] 2

Within cluster sum of squares by cluster:
[1] 2653.690 5794.245
 (between_SS / total_SS =  42.5 %)

Available components:

[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"    
[5] \"tot.withinss\" \"betweenss\"    \"size\"         \"iter\"        
[9] \"ifault\"      
"
"0","```r
# Calculate the within-cluster sum of squares (WSS)
wss_2 <- sum(kmeans_model_2$withinss)

# Calculate the between-cluster sum of squares (BSS)
bss_2 <- sum(kmeans_model_2$size * dist(rbind(kmeans_model_2$centers, colMeans(transformed_data)))^2)
```"
"1","Warning: longer object length is not a multiple of shorter object length
"
"0","```r
# Calculate the total sum of squares (TSS)
tss_2 <- sum(dist(transformed_data)^2)

# Calculate the ratio of BSS to TSS
bss_tss_ratio_2 <- bss_2 / tss_2

# Print the WSS, BSS, TSS, and ratio of BSS to TSS
cat(\"For k=2:\n\")
```"
"1","For k=2:
"
"0","```r
cat(\"Within-cluster sum of squares (WSS): \", wss_2, \"\n\")
```"
"1","Within-cluster sum of squares (WSS):  8447.934 
"
"0","```r
cat(\"Between-cluster sum of squares (BSS): \", bss_2, \"\n\")
```"
"1","Between-cluster sum of squares (BSS):  18494.98 
"
"0","```r
cat(\"Total sum of squares (TSS): \", tss_2, \"\n\")
```"
"1","Total sum of squares (TSS):  11941679 
"
"0","```r
cat(\"Ratio of BSS to TSS: \", bss_tss_ratio_2, \"\n\n\")
```"
"1","Ratio of BSS to TSS:  0.001548776 
"
"0","```r
# Perform k-means clustering with k=3
set.seed(1234)
kmeans_model_3 <- kmeans(transformed_data, centers = 3, nstart = 25)

# Print the k-means output
print(kmeans_model_3)
```"
"1","K-means clustering with 3 clusters of sizes 253, 326, 234

Cluster means:
        PC1        PC2          PC3         PC4         PC5
1  4.082683 -0.3255019 -0.108558022  0.06971434 -0.01298916
2 -1.109430  1.5113013  0.079320869 -0.15367255  0.02569094
3 -2.868567 -1.7535565  0.006865712  0.13871591 -0.02174782
          PC6         PC7
1 -0.06623388  0.08072345
2 -0.05468482  0.03062288
3  0.14779668 -0.12994056

Clustering vector:
  [1] 2 2 1 2 1 2 2 2 2 2 2 2 2 2 1 3 2 1 1 3 3 2 2 1 2 3 1 1 3
 [30] 2 2 2 1 2 2 3 1 3 1 3 3 2 3 3 3 2 3 2 1 2 1 2 2 3 1 3 1 3
 [59] 3 3 2 3 3 1 2 1 1 1 2 3 2 1 2 3 1 3 1 2 3 2 2 3 2 3 1 2 1
 [88] 2 3 1 3 3 1 3 2 2 3 1 1 1 3 3 2 2 2 3 3 2 1 1 3 2 3 3 2 2
[117] 2 3 2 1 1 2 3 1 3 2 3 2 2 3 1 3 2 1 2 2 2 2 1 2 2 1 2 1 2
[146] 3 2 2 3 1 2 3 1 1 2 1 3 3 1 1 2 1 2 2 2 2 2 3 1 3 2 3 1 2
[175] 2 2 1 2 2 2 1 2 3 1 3 3 3 2 2 1 1 2 2 2 3 3 1 2 2 2 1 3 2
[204] 3 1 3 2 1 3 1 3 3 2 1 2 1 3 3 3 1 2 3 2 3 1 3 2 2 3 1 3 3
[233] 2 2 1 3 3 1 3 2 2 1 2 2 1 1 3 2 2 2 1 3 3 2 2 3 3 2 2 2 1
[262] 2 3 3 1 2 2 3 3 1 3 2 2 3 1 3 3 2 2 1 2 1 3 2 2 1 2 2 2 3
[291] 2 1 1 1 1 1 3 2 1 3 3 3 2 3 1 1 1 3 1 2 3 1 3 2 2 2 1 1 3
[320] 1 1 3 1 2 2 2 3 3 1 1 1 2 2 2 1 3 2 3 2 2 2 1 2 1 1 1 2 2
[349] 3 1 2 3 3 2 2 2 2 2 3 1 1 3 3 1 3 3 1 2 2 2 2 1 3 2 2 2 2
[378] 1 2 2 2 2 1 2 1 2 3 3 2 2 2 3 3 2 3 1 2 2 3 2 3 1 2 3 2 2
[407] 1 2 1 2 1 1 3 3 1 2 3 3 2 1 1 3 3 1 1 3 1 1 1 2 2 2 2 2 1
[436] 3 3 2 1 2 2 1 2 3 1 3 3 1 1 2 3 1 1 1 3 1 1 2 2 3 1 1 2 2
[465] 3 3 1 2 3 1 1 2 3 1 1 2 1 3 1 1 1 3 3 1 1 2 2 1 3 2 1 2 3
[494] 3 1 3 2 2 3 2 1 2 1 1 2 3 2 1 1 3 3 2 1 2 1 1 2 2 2 2 3 3
[523] 2 2 1 3 3 2 3 1 2 1 3 3 1 1 2 1 2 2 2 1 2 3 2 1 2 2 3 1 1
[552] 1 1 2 3 3 3 1 1 1 2 1 3 2 1 3 3 3 2 3 2 2 2 2 2 2 2 1 2 2
[581] 1 2 2 2 3 1 3 3 2 3 2 2 3 3 1 1 3 2 3 1 2 2 1 2 3 1 3 1 3
[610] 3 2 3 2 1 1 2 1 2 2 3 2 3 1 2 1 3 2 2 2 3 3 2 1 2 1 3 2 2
[639] 2 2 1 2 3 1 2 1 2 2 1 3 1 3 2 2 2 3 1 2 3 2 1 3 1 2 2 1 3
[668] 2 3 2 2 3 2 1 1 2 2 1 1 2 3 2 1 1 1 1 2 1 2 2 1 1 2 1 2 1
[697] 2 3 1 2 3 1 1 1 2 1 3 3 1 1 1 2 1 2 2 1 2 3 2 3 2 1 2 3 2
[726] 2 2 3 1 3 3 3 1 3 1 1 3 2 2 1 2 3 1 1 3 2 2 1 1 1 3 1 2 1
[755] 1 3 3 1 3 1 2 3 2 1 1 2 3 1 2 2 3 2 2 1 3 2 1 3 3 1 3 2 3
[784] 3 2 1 1 2 3 1 2 1 1 3 2 1 3 3 2 2 1 3 3 3 2 2 2 2 2 2 1 2
[813] 3

Within cluster sum of squares by cluster:
[1] 2275.842 2684.032 1661.811
 (between_SS / total_SS =  54.9 %)

Available components:

[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"    
[5] \"tot.withinss\" \"betweenss\"    \"size\"         \"iter\"        
[9] \"ifault\"      
"
"0","```r
# Calculate the within-cluster sum of squares (WSS)
wss_3 <- sum(kmeans_model_3$withinss)

# Calculate the between-cluster sum of squares (BSS)
bss_3 <- sum(kmeans_model_3$size * dist(rbind(kmeans_model_3$centers, colMeans(transformed_data)))^2)

# Calculate the total sum of squares (TSS)
tss_3 <- sum(dist(transformed_data)^2)

# Calculate the ratio of BSS to TSS
bss_tss_ratio_3 <- bss_3 / tss_3

# Print the WSS, BSS, TSS, and ratio of BSS to TSS
cat(\"For k=3:\n\")
```"
"1","For k=3:
"
"0","```r
cat(\"Within-cluster sum of squares (WSS): \", wss_3, \"\n\")
```"
"1","Within-cluster sum of squares (WSS):  6621.685 
"
"0","```r
cat(\"Between-cluster sum of squares (BSS): \", bss_3, \"\n\")
```"
"1","Between-cluster sum of squares (BSS):  35416.63 
"
"0","```r
cat(\"Total sum of squares (TSS): \", tss_3, \"\n\")
```"
"1","Total sum of squares (TSS):  11941679 
"
"0","```r
cat(\"Ratio of BSS to TSS: \", bss_tss_ratio_3, \"\n\")
```"
"1","Ratio of BSS to TSS:  0.0029658 
"
